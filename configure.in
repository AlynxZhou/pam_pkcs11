# $Id$

# Require autoconf 2.52
AC_PREREQ(2.52)

# Process this file with autoconf to produce a configure script.
AC_INIT(pam_pkcs11,"WIP")
AC_CONFIG_SRCDIR([src/pam_pkcs11/pam_pkcs11.c])
AC_CANONICAL_TARGET([])
AM_INIT_AUTOMAKE(pam_pkcs11, "WIP")
AC_CONFIG_HEADERS([config.h])

AM_MAINTAINER_MODE

# Add argument for debuging
AC_ARG_ENABLE(debug, 
  [  --enable-debug          add debugging code (default=yes)])
if test "$enable_debug" = "no" -o "$enable_debug" = "false"
then
  AC_MSG_WARN([Debugging support is completely disabled!])
else
  AC_DEFINE(DEBUG, 1, [Define to 1 if you want to include debugging code.])
fi

# Add argument for using curl
AC_ARG_WITH(curl,
  [  --with-curl             use curl (default=no)])
if test "$with_curl" = "yes" -o "$with_curl" = "true"
then
  AC_DEFINE(USE_CURL, 1, [Define to 1 if you want to use curl.])
  USE_CURL=1
fi

dnl Check for SGML processor
AC_ARG_WITH(docbook,
[  --without-docbook       do no generate html manual (needs docbook)],
        with_docbook=$withval)
AC_CHECK_PROG(XSLTPROC, xsltproc, xsltproc)
if test "x$XSLTPROC" = "x"; then
        if test "x$with_docbook" = "xyes"; then
                AC_MSG_ERROR([Docbook support requested, but cannot find xsltproc])
        fi
        with_docbook=no
fi
AM_CONDITIONAL(HAVE_DOCBOOK, test "x$with_docbook" != "xno")

AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])

# Check and set OpenSSL paths
PKG_CHECK_MODULES(OPENSSL, openssl, [], [ AC_MSG_ERROR(openssl not found) ])

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S

# Checks for libraries.
AC_CHECK_LIB(pam, pam_get_item, , AC_MSG_ERROR(could not locate pam libraries))
if test "$USE_CURL" != "1"; then
AC_CHECK_LIB(ldap, ldap_init, , AC_MSG_ERROR(could not locate ldap library))
else
AC_CHECK_LIB(curl, curl_easy_init, , AC_MSG_ERROR(could not locate cURL library)) 
fi

# add our compiled static libraries
AC_SUBST(LIBSCCONF)
LIBSCCONF="\${top_builddir}/src/scconf/libscconf.la"
AC_SUBST(LIBCOMMON)
LIBCOMMON="\${top_builddir}/src/common/libcommon.la"

#AC_CHECK_LIB(scconf, scconf_new, COMPILE_SCCONF="no",COMPILE_SCCONF="yes")
#if test "x$COMPILE_SCCONF" = "xyes" ; then
#	LIBSCCONF="\${top_builddir}/src/scconf/libscconf.la"
#else
#	LIBSCCONF="-lscconf"
#fi
#AM_CONDITIONAL(MAKE_SCCONF,test "x$COMPILE_SCCONF" = "xyes")

AC_SUBST(PAM_PKCS11)
PAM_PKCS11="\${top_builddir}/src/pam_pkcs11/pam_pkcs11.la"

# AC_SUBST(COMMON_OBJS)
# COMMON_OBJS="\${top_builddir}/src/common/debug.o \${top_builddir}/src/common/error.o"

dnl check pcsc-lite

PKG_CHECK_MODULES(PCSC, libpcsclite, [ pcsc=true ],
	[ if test -f /usr/local/lib/pkgconfig/libpcsclite.pc ; then
		AC_MSG_ERROR([use PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure])
	  else
		AC_MSG_WARN([pcsc-lite not found])
	fi
])
AM_CONDITIONAL(HAVE_PCSC, test x$pcsc = xtrue)

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([string.h syslog.h fcntl.h unistd.h])
if test "$USE_CURL" != "1"; then
AC_CHECK_HEADERS([ldap.h])
else
AC_CHECK_HEADERS([curl/curl.h])
fi

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([memset strdup strerror])


AC_CONFIG_FILES([ 
Makefile
aclocal/Makefile
docs/Makefile
etc/Makefile
src/Makefile
src/scconf/Makefile
src/common/Makefile
src/tools/Makefile
src/mappers/Makefile
src/pam_pkcs11/Makefile
tools/Makefile
])
AC_OUTPUT
